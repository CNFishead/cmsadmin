# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - ministrycmsadmin

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install deps (CI)
        run: npm ci --no-audit --no-fund

      - name: Build (standalone)
        run: npm run build

      # Package only what the runtime needs. No repo root, no node_modules at top-level.
      - name: Prepare deploy folder
        run: |
          rm -rf deploy && mkdir -p deploy

          # 1) Put the standalone server at the app root (so start can run "node server.js")
          rsync -a .next/standalone/ deploy/

          # 2) Next still expects a minimal .next folder at runtime:
          #    - BUILD_ID (to identify the build)
          #    - static/  (for client assets)
          mkdir -p deploy/.next
          cp .next/BUILD_ID deploy/.next/            # <-- THIS is why your error happened
          rsync -a .next/static/ deploy/.next/static/

          # 3) Public assets (if you use /public)
          if [ -d public ]; then rsync -a public/ deploy/public/; fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-standalone
          path: deploy

      # - name: npm install, build, and test
      #   run: |
      #     npm install

      # - name: Build Next.js project
      #   run: npm run build
      #   env:
      #     API_URL: 'https://api.shepherdcms.org/api/v1'
      #     AUTH_URL: 'https://api.shepherdcms.org'
      #     SERVICE_NAME: 'ShepherdCMS Admin'
      #     ENV: production
      #     NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      #     NEXT_PUBLIC_ENCRYPTION_KEY: ${{ secrets.NEXT_PUBLIC_ENCRYPTION_KEY }}
      #     NEXT_PUBLIC_TINYMCE_API_KEY: ${{ secrets.NEXT_PUBLIC_TINYMCE_API_KEY }}

      # - name: Zip artifact for deployment
      #   run: zip -r release.zip .next public package.json package-lock.json

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: next-standalone
          path: .

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ministrycmsadmin'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E3AC00C121014245A5AA74E8D7A5B32D }}
